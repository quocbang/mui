image: docker:stable
stages:
  - test + build
  - deploy
variables:
  ANSIBLE_FORCE_COLOR: "true"
  RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
before_script:
  - |
    docker login ${REGISTRY_HOSTNAME}:${REGISTRY_PORT} -u ${DEPLOY_USER} -p ${DEPLOY_TOKEN}
    mkdir -p ~/.ssh && echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
    chmod 600 ~/.ssh/id_rsa

test + build:
  stage: test + build
  script:
    - |
      if [ "${CI_COMMIT_TAG}" != "" ]; then
        RESTFUL_SERVER=${PROD_SERVER_NAME}
        PUSH_IMAGE=true
      elif [ "${CI_COMMIT_REF_NAME}" = "master" ]; then
        RESTFUL_SERVER=${DEV_SERVER_NAME}
        PUSH_IMAGE=true
      fi
      docker build -t ${RELEASE_IMAGE} --build-arg SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" --build-arg KEN_CRT="${KEN_CRT}" .
      if [ "${PUSH_IMAGE}" = "true" ]; then
        docker push ${CI_REGISTRY_IMAGE}
      fi
deploy:
  stage: deploy
  script:
    - >
      if [ "${CI_COMMIT_TAG}" != "" ]; then
        DEPLOY_SERVER=${PROD_SERVER}
      elif [ "${CI_COMMIT_REF_NAME}" = "master" ]; then
        DEPLOY_SERVER=${DEV_SERVER}
      fi
    - >
      ssh -o StrictHostKeyChecking=no -tt root@${DEPLOY_SERVER}
      'cd /srv/go/service/'${CI_PROJECT_NAME}';
      sed -i "s/IMAGE_TAG=.*/IMAGE_TAG='${CI_COMMIT_REF_NAME}'/g" '${ENV_FILENAME}';
      docker-compose down;
      docker-compose pull && docker-compose up --build -d;'
  only:
    - tags
    - master
